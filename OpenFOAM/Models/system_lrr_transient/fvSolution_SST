/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    "(rho|U|h|k|omega|epsilon).*"
    {
        solver          PBiCGStab;
        preconditioner	DILU;
        tolerance       1e-12;
        relTol          0.0;
    }

    //RSM adder
	R
	{
	solver		smoothSolver; //PBiCGStab
	//preconditioner DILU;
        smoother	GaussSeidel;
	tolerance	1e-16;
	relTol		0.001;
	}

	RFinal
	{
	solver		smoothSolver; //PBiCGStab
	//preconditioner	DILU;	
	smoother	GaussSeidel;
	tolerance	1e-18;
	relTol		0.001;		
	}
	
	p
	{
        solver          PBiCGStab;
        preconditioner	DILU;
		//solver          GAMG;
        tolerance       1e-12;
        relTol          0.;
        //smoother        DILUGaussSeidel;
        //nCellsInCoarsestLevel 20;
    	}
	
	pFinal
	{
        solver          PBiCGStab;
        preconditioner	DILU;
		//solver          GAMG;
        tolerance       1e-12;
        relTol          0;
        //smoother        DILUGaussSeidel;
        //nCellsInCoarsestLevel 20;
    }
}

PIMPLE
{
                                
    momentumPredictor           true; //true false;
	//run 1 
	nCorrectors                 2;
	nOuterCorrectors            30;
	//run 2+
	//nCorrectors                 1;
	//nOuterCorrectors            1;
	
    nNonOrthogonalCorrectors    1;
    nonOrthogonalityThreshold   60;
    skewnessThreshold           0.5;
    updateEnergyInPISO          true; //true false;
    fluxScheme                  Kurganov;
    
    kappaFunction
    {
        type standardMachToAcCourantRatio;
        
        standardMachToAcCourantRatioCoeffs
        {
        }
    }
	
	residualControl
    {
		h
        {
                tolerance  1e-4;
                relTol      0;
        }
		k
        {
                tolerance  1e-4;
                relTol      0;
        }
		omega
        {
                tolerance  1e-4;
                relTol      0;
        }
		epsilon
	{
		tolerance  1e-4;
		relTol     0;
	}
		R
	{
		tolerance  1e-4;
		relTol	   0;
	}
        	p
        {
                tolerance  1e-4;
                relTol      0;
        }
     }
}

relaxationFactors
{
    equations
    {
        "U.*"           0.7;
        "h.*"           0.3;
	"k.*"           0.2;
        "omega.*"       0.2;

	//RSM adder
	"epsilon.*"     0.3;
	"R.*"           0.6;
    }
    
    fields
    {
        "p.*"           0.3;
    }
}


// ************************************************************************* //
