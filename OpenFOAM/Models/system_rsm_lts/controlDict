/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     pimpleCentralFoam;

startFrom       startTime; //firstTime, startTime, latestTime

startTime       0;

stopAt          endTime; //writeNow, noWriteNow, nextWrite, endTime

endTime		100000;		//run 1 Initializing from from M4_RANS R4, LTS same maxCo & pimple Corrector 
				//run 2 same maxCo w. higher rDeltaT table and switch to RSM turbulence model 
//endTime	2000000;	//run 3 LTS run to get stable at maxCo = 1
//endTime	0.015;		//run 4 Changed to transient (backward timestepping). 
//endTime	0.02;		//run 5 Further transient run to decrease the filesize of time files and collate probe averaging files
//endTime	0.05;		//run 6 Long transient to try and quell the non-physical flow phenomena

deltaT	1;		//run 1 LTS
//deltaT          1e-9;

writeControl    adjustableRunTime;

writeInterval		25000;	//run 1 
//writeInterval		200000;	//run 3 LTS run to get stable at maxCo = 1
//writeInterval		0.001;	//run 4 Transient with backward timestep

purgeWrite      8;

writeFormat     ascii;

writePrecision  12;

writeCompression off;

timeFormat      general;

timePrecision   20;

runTimeModifiable true;

adjustTimeStep  true;

CourantType     cellCourant;

maxCo		1.5;	//run 1 
//maxCo		1;	//run 3 & 4

rDeltaTSmoothingCoeff table		//Not needed for run 4+
(
   (   0 0.001)
   ( 100 0.001)
   (1000 0.025)
   (2000 0.1)
);

rDeltaTDampingCoeff 0.1;

initialDeltaT   1e-7;

maxDeltaT       1e-5;

CourantCalcMethod acousticCourant;

functions
{
  #includeFunc  residuals
  #includeFunc  jetInletFlow
  #includeFunc  farfieldATMFlow
  #includeFunc  outletFlow
  #includeFunc  inletFlow
  #includeFunc  Min
  #includeFunc  Max
  #includeFunc  MachNo
  #includeFunc  yPlus
  #includeFunc  tubeInlet_intB
  #includeFunc  tubeOutlet_intB
  #includeFunc  jetOutlet_intB
  #includeFunc  jetCore_intB
  #includeFunc  turbulenceFields
  #includeFunc  jetOutletFlow
  #includeFunc  tubeInletFlow
  #includeFunc  tubeOutletFlow
  #includeFunc	wallShearStress
  #includeFunc  zprobe1425a
  #includeFunc  zprobe1425b
  #includeFunc  zprobe1425c

  fieldAverage1
 {
    // Mandatory entries (unmodifiable)
    type            fieldAverage;
    libs            ("libfieldFunctionObjects.so");


    // Mandatory entries (runtime modifiable)
    fields
    (
	U
        {
            mean        on;
            prime2Mean  on;
            base        time;
        }

	T
        {
            mean        on;
            prime2Mean  on;
            base        time;
        }
	
	p
        {
            mean        on;
            prime2Mean  on;
            base        time;
        }

	rho
        {
            mean        on;
            prime2Mean  on;
            base        time;
        }
	k
        {
            mean        on;
            prime2Mean  on;
            base        time;
        }
	R
        {
            mean        on;
            prime2Mean  on;
            base        time;
        }
	nut
        {
            mean        on;
            prime2Mean  on;
            base        time;
        }
    );

    // Optoional entries (runtime modifiable)
    restartOnRestart	true;
    restartOnOutput	false;
    periodicRestart	false;	//Average over a set number of iterations	
    
    // Optional (inherited) entries
    enabled		true;
    log			true;
    executeControl	timeStep;
    executeInterval	1;
    writeControl	writeTime;
   
 };


}


// ************************************************************************* //
